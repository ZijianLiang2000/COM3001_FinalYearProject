-# Enable gon to work, so that ENV variables can be passed to js
= include_gon
%head
%title Basic Embed
%body{:onload => "init()"}
    -# include script to add google embed iframe
    %script{:src => "https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"}

    %div#lad_option{ :style => "position: absolute; margin: auto;padding: 10px; top: 130px;left: 40px;" }
        .tips#tips
        %br
        .card#card_select{:style => "width: 40rem;"}
            .card-body
                -# Options to choose which map to display
                %h4 Map View:
                %select#globalstyleselect{:onchange => "styleselect()", :class => "form-select w-100%" }
                    %option{:disabled => "disabled", :hidden => "", :selected => "selected", :value => "none"} Select an Option
                    %option{:value => "1"} Heatmap
                    %option{:value => "2"} Density map
                %br
                %h4 Data View:
                %select#dataview{:onchange => "dataview()", :class => "form-select w-100%"}
                    %option{:selected => "selected", :value => "none"} Map
                    %option{:value => "1"} Ethnic Structure (Chart)
                    %option{:value => "2"} Population Median Age (Chart)
                    %option{:value => "3"} Region Similarity (Clusters)
                    %option{:value => "4"} Region Restaurant Density Similarity (Clusters)
                    %option{:value => "5"} Region Rent and Similarity (Clusters)
                %br
                %h4 Restaurant Category:
                %select#rest_cat_select{:onchange => "update_weight_to_tableau()", :class => "form-select w-100%"}
                    %option{:disabled => "disabled", :hidden => "", :selected => "selected", :value => "none"} Select an Restaurant Category
                    %option{:value => "0"} Italian Restaurant
                    %option{:value => "1"} Indian Restaurant
                    %option{:value => "2"} Japanese Restaurant
                    %option{:value => "3"} Thai Restaurant
                    %option{:value => "4"} British Restaurant
                    %option{:value => "5"} Chinese Restaurant
                    %option{:value => "6"} Vegetarian
                    %option{:value => "7"} Cafe
                    %option{:value => "8"} Pub
                %br
                -# Button to Previous step
                = back_link
                

%script{:src => "https://public.tableau.com/javascripts/api/tableau-2.min.js", :type => "text/javascript"}

-# Window to pop-up and function to open the sidebar
:javascript

    function init(){
        var rest_cat_val = $('#rest_cat_select').val();
        document.getElementById('rest_cat_select').selectedIndex = gon.rest_cat;
        console.log("Selected Restaurant Category: " + (gon.rest_cat));
        
        document.getElementById("tips").innerHTML=
        `<div class="card" style="width: 40rem;">
        <div class="card-body"><h5>Tips</h5><a class="closebtn" href="javascript:void(0)" onclick="closeTips()">&times;</a><p style='font-family: Segoe UI;'><small>Explore information related to each local authority area through hovering and tapping on it. 
        The heatmap displays recommendation value in colour scale. Select different views and change restaurant categories to update recommendation value.
        <br><ul>
        <li>To move the map view: Hold "Shift" + "Left Button" and drag mouse</li>
        <li>To zoom in and out: Scroll through the scroll wheel of mouse</li>
        <li>To view presentation of area data: Hover mouse on an area</li>
        <li>To view detailed information of area, explore nearby locations or select current LAD location: Click on an area</li>
        </ul></small></p></div>
        </div>`;

        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "none";
        
        // Select default option to be 1, so do not need to press every time
        console.log("Running Init function");
        document.getElementById('globalstyleselect').selectedIndex = "1";
        document.getElementById("globalstyleselect").dispatchEvent(new Event("change"));
    }

    function closeTips(){
        document.getElementById("tips").style.display = "none";
        document.getElementById("card_select").style="width: 18rem;"
    }

    function openNav(name, code, lat,lng,population,count, rest_cat_val, sum_rest_num, curr_rest_num,area_size) {

        // Current type restaurant number in area
        console.log("Number of selected type restaurant in lad:" + curr_rest_num);
        console.log("Number of all restaurant in lad:" + sum_rest_num);
        
        total = 0
        for(var k in count) {
            console.log("Each:" + count[k]);
            total += parseInt(count[k])
        }
        console.log("RestCatVal:" + rest_cat_val)
        console.log("RestCatVal (int):" + parseInt(rest_cat_val))
        console.log("Area size:" + parseInt(area_size))
        console.log("Number of selected category restaurants in and nearby LAD:" + count[parseInt(rest_cat_val)])
        console.log("Listed restaurants within area: " + parseInt(total))

        restaurant_Category_Encode = ["Italian Restaurant","Indian Restaurant","Japanese Restaurant","Thai Restaurant","British Restaurant","Chinese Restaurant","Vegetarian","Cafe","Pub"]

        // Google maps API iFrame source - latitude and longitude of clicked LSOA area on map
        src = ' src="https://www.google.com/maps/embed/v1/view?key='+gon.google_api_key+'&center=' + lat + ',' + lng + '&zoom=15">'
        // Let LSOA default map to show be identical to previous map if next stage
        var map_style = $('#globalstyleselect').val();
        console.log(src);
        console.log("Token: " + gon.form_token);
        console.log("Map style: " + map_style);
        
        innerHtml = '<head><style>' +
        // Header part
        ".holder .card{position: absolute;top: 10px;left: 10px;width: 100%;}.holder #nearby_search{position: absolute;top: 320px;left: 110px;}" +
        '.holder #select_area{position: absolute;bottom: 60px; left: 30%;}'+
        '</style></head>' +
        '<body>' + 
        // Close Button
        '<a class="closebtn" href="javascript:void(0)" onclick="closeNav()">&times;</a>' +
        // Google map frame
        '<div class="holder"><iframe id="map_frame"' +
        ' width="450"' +
        ' height="800"' +
        ' style="border:0"' +
        ' loading="lazy"' +
        ' allowfullscreen' +
        src +
        '</iframe>' +
        // Button to select a location, post params of location to controller
        '<form class="button_to" method="post" action="/lsoa_heatmap?name='+name+'&lad='+ code +'&map_style='+ map_style + '&rest_cat='+ parseInt(rest_cat_val) +'">'+
        '<input class="btn btn-success" id="select_area" type="submit" value="Select ' + name + '" />' +
        '<input type="hidden" name="authenticity_token" value="' + gon.form_token + '" />' +       
        '</form>' +
        // Card to display information about district
        '<div class="card" style="width: 18rem;">' +
        '<div class="card-body">' +
        '<h5 class="card-title">'+ name +'</h5>' +
        '<h6 class="card-subtitle mb-2 text-muted">Area size: '+ parseInt(area_size) * 10 +' kmÂ²</h6>' +
        '<h6 class="card-subtitle mb-2 text-muted">Population: '+ population +'</h6>' +
        '<h6 class="card-subtitle mb-2 text-muted"> '+ (total - 0) +' listed restaurants within and nearby </p>' +
        '<h6 class="card-subtitle mb-2 text-muted"> '+ sum_rest_num +' listed restaurants in ' + name + ' </p>' +
        '<h6 class="card-subtitle mb-2 text-muted" id="dir_compt"> '+ curr_rest_num +' Direct Competitors (' + restaurant_Category_Encode[parseInt(rest_cat_val)] + ') </p>' +
        '<h6 class="card-subtitle mb-2 text-muted" id="indir_compt"> '+ (total - curr_rest_num) +' Indirect Competitors </p>' +
        
        // button for nearby search
        '<form class="button_to" method="post" action="/nearby_result?name='+name+'&map=LAD">' +
        '<input class="btn btn-primary" id="nearby_search" type="submit" value="Feature Locations nearby" />' +
        '<input type="hidden" name="authenticity_token" value="' + gon.form_token + '" />' +       
        '</form>'
        '</div></div></div></body>'


        document.getElementById("mySidebar").innerHTML=innerHtml;
        document.getElementById("mySidebar").style.width = "450px";
        
    }

    function closeNav() {
        document.getElementById("mySidebar").style.width = "0";
    }

    let viz
    //function for viz
    function initViz(containerDiv, url, options) {
        if (viz){
            viz.dispose();
        }
        viz = new tableau.Viz(containerDiv, url, options);
    }

    window.addEventListener("resize", () => {
        console.log(
            `Resizing the window ${window.innerHeight}, ${window.innerWidth}`
        );
        autoResize();
    });


    function encapsulateViewViz(url, filter_name, filter_val){
        console.log(url);
        console.log(filter_name);
        console.log(filter_val);
        var containerDiv = document.getElementById("vizContainer"),
            url = url,
            options = {
                // Options to show/filter Restaurant category according to selected type from user
                filter_name: filter_val,
                width: window.innerWidth,
                height: window.innerHeight,
                device: "desktop",
                hideTabs: true,
                onFirstInteractive: function () {
                    workbook = viz.getWorkbook();
                    console.log("Run this code when the viz has finished loading.");
                    listenToMarksSelection();
                    
                }
            }
    initViz(containerDiv, url, options);
    }
    // Option to show sheet 1 Heat map
    function applyOptions1() {
        rest_cat = ["Italian Restaurant","Indian Restaurant","Japanese Restaurant","Thai Restaurant","British Restaurant","Chinese Restaurant","Vegetarian","Cafe","Pub"];
        // Selected restaurant category options from user, eg: 3, we want to get rest_cat[3] = Thai Restaurant
        var rest_cat_value = $('#rest_cat_select').val();
        var heatMap_url = "https://public.tableau.com/views/LAD_Recommendation_Value/LADWorksheetHeatmap?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link";
        encapsulateViewViz(heatMap_url,"Restaurant Category", rest_cat[rest_cat_value])
    }

    // Option to show sheet 2 for Density
        function applyOptions2() {
        rest_cat = ["Italian Restaurant","Indian Restaurant","Japanese Restaurant","Thai Restaurant","British Restaurant","Chinese Restaurant","Vegetarian","Cafe","Pub"];
        // Selected restaurant category options from user, eg: 3, we want to get rest_cat[3] = Thai Restaurant
        var rest_cat_value = $('#rest_cat_select').val();
        var densityMap_url = "https://public.tableau.com/views/LAD_Recommendation_Value/LADWorksheetDensityMap?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link";
        encapsulateViewViz(densityMap_url,"Restaurant Category", rest_cat[rest_cat_value]);
    }

    function encapsulateDataViz(url){
        var containerDiv = document.getElementById("vizContainer"),
        url = url,
        options = {
            // Options to show/filter Restaurant category according to selected type from user
            width: window.innerWidth,
            height: window.innerHeight,
            device: "desktop",
            hideTabs: true,
            onFirstInteractive: function () {
                workbook = viz.getWorkbook();
                console.log("Run this code when the viz has finished loading.");
                listenToMarksSelection();
            }
    };

    initViz(containerDiv, url, options);
    }

    // Option to show ethnic structure
    function applyDataView1() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADEthnicStructure?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link");
    }
    

    function applyDataView2() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADPopulation?:language=zh-CN&publish=yes&:display_count=n&:origin=viz_share_link");
    }

    function applyDataView3() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADCluster?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link");
    }
    

    function applyDataView4() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADRestaurantCategoryDensity?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link");
    }

    function applyDataView5() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADClusterRentandHousing?:language=en-GB&:display_count=n&:origin=viz_share_link");
    }

    // Resize dashboard window
    function autoResize(){
        const height = window.innerHeight;
        const width = window.innerWidth;
        viz.setFrameSize(width, height);
    }

    function styleselect() {
        // hide block option every time onchange option
        document.getElementById("lad_option").style.position = "absolute";
        document.getElementById("lad_option").style.top = "130px";
        document.getElementById("lad_option").style.left = "40px";

        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "none";

        var value = $('#globalstyleselect').val();
        // once map view is changed, set data view back to map
        var dataview_value = $('#dataview').val();
        document.getElementById('dataview').selectedIndex = "none";
        //var div = $("#stylediv");
        // If map style is Heatmap map
        if (value == "1") {
            // Use data sheet for Heatmap map
            applyOptions1();
        }
        // else you datasheet for Density map
        if (value == "2") {
            applyOptions2();
        }
    }

    function dataview() {
        // hide block option every time onchange option
        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "none";

        var value = $('#dataview').val();
        var map_value = $('#globalstyleselect').val()
        // if dataview is selected as Map
        if (value == "none") {
            document.getElementById("lad_option").style.position = "absolute";
            document.getElementById("lad_option").style.top = "130px";
            document.getElementById("lad_option").style.left = "40px";
            // while map view is selected as heatmap or not selected
            if (map_value == "1" || map_value == "none"){
                    
                // apply first option
                applyOptions1();
                
            }
            // or else apply the second
            else {
                applyOptions2();
            }
        }
        //var div = $("#stylediv");
        // If map style is Ethnic Structure table
        if (value == "1") {
            document.getElementById("lad_option").style.position = "relative";
            document.getElementById("lad_option").style.top = "0px";
            document.getElementById("lad_option").style.left = "0px";
            // Use data sheet for Ethnic Structure table
            applyDataView1();
        }
        // else you datasheet for XXX
        if (value == "2") {
            document.getElementById("lad_option").style.position = "relative";
            document.getElementById("lad_option").style.top = "0px";
            document.getElementById("lad_option").style.left = "0px";
            applyDataView2();
        }
        if (value == "3") {
            document.getElementById("lad_option").style.position = "absolute";
            document.getElementById("lad_option").style.top = "130px";
            document.getElementById("lad_option").style.left = "40px";
            applyDataView3();
        }
        if (value == "4") {
            document.getElementById("lad_option").style.position = "absolute";
            document.getElementById("lad_option").style.top = "130px";
            document.getElementById("lad_option").style.left = "40px";
            applyDataView4();
        }
        if (value == "5") {
            document.getElementById("lad_option").style.position = "absolute";
            document.getElementById("lad_option").style.top = "130px";
            document.getElementById("lad_option").style.left = "40px";
            applyDataView5();
        }
    }

    // JS scipt to update value when an option is selected for restuarant category
    // because some weights for importance change for different restaurants
    function update_weight_to_tableau(){
        // hide block option every time onchange option
        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "none";

        var rest_cat_value = $('#rest_cat_select').val();
        var map_type = $('#globalstyleselect').val();

        //default settings
        var Weight_Population = 1;
        var Asian_Weight = 1;
        var Ethnic_Sort_by = "Default";

        console.log("Selected restaurant category: '" + rest_cat_value + "'")

        // weight updates on heatmap and density map

        // calculate value of weights of each parameter
        // if rest_cat_value = 5 (Chinese Restaurant), then update weights
        if (rest_cat_value == 5){
            Weight_Population = 0.5;
            Asian_Weight = 0.8;
        }

        // weight updates for statistics on population of cities
        if (rest_cat_value == 1 || rest_cat_value == 2 || rest_cat_value == 3 || rest_cat_value == 5){
            Ethnic_Sort_by = "Asian Percentage";
        } else if(rest_cat_value == 4 || rest_cat_value == 6 || rest_cat_value == 7) {
            Ethnic_Sort_by = "White Percentage";
        }
        else {
            Ethnic_Sort_by = "White Percentage";
        }
        // etc
        console.log("Sort by:" + Ethnic_Sort_by);
        console.log("Weight Population:" + Weight_Population + ", Asian Weight: " + Asian_Weight);
        // change all weights to if-condition weights defined
        workbook.changeParameterValueAsync("Weight_Population", Weight_Population);
        workbook.changeParameterValueAsync("Asian_weight", Asian_Weight);
        workbook.changeParameterValueAsync("Sort by", Ethnic_Sort_by);
        workbook.changeParameterValueAsync("Rest_Cat", rest_cat_value);
        console.log("Finished Adjusting weights");
        lad_option.style.display = "block";
    }

    function listenToMarksSelection() {
        console.log("listenToMarksSelection function is loaded");
        //Check every time when map is loaded, the value of restaurant category and update weights
        update_weight_to_tableau();

        // Display option block everytime map is loaded
        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "block";

        viz.addEventListener(tableau.TableauEventName.MARKS_SELECTION, onMarksSelection);
    }

    function onMarksSelection(marksEvent) {
        console.log("onMarksSelection function is loaded");
        return marksEvent.getMarksAsync().then(reportSelectedMarks);
    }

    function reportSelectedMarks(marks) {
        console.log("reportSelectedMarks is loaded");
        var html = "";

        // Obtain mark data when selected
        for (var markIndex = 0; markIndex < marks.length; markIndex++) {
            var pairs = marks[markIndex].getPairs();
            html += "Mark " + markIndex + ": ";
            var array = [];
            var dict = {}
            for (var pairIndex = 0; pairIndex < pairs.length; pairIndex++) {
                var pair = pairs[pairIndex];
                html += "Field Name: " + pair.fieldName;
                html += ", Value:" + pair.formattedValue + "\n ";
                dict[pair.fieldName] = pair.formattedValue;
                array.push(pair.formattedValue);
            }
            console.log(html);
            html += "";
            //for (var index = 0; index < array.length; index++) {
            //    console.log(array[index] + " ");
            //}
            for(var key in dict) {
                console.log(key + " : " + dict[key]);
            }
        }

        // Print selected restaurant category value
        var rest_cat_value = $('#rest_cat_select').val();

        // Assign mark parameters to values
        var name =  dict["Lad 2020 Name"];
        var area_size = dict["ATTR(Areachect)"];
        var population = dict["ATTR(Population (All ages))"];
        var lat = dict["Latitude (generated)"];
        var lng = dict["Longitude (generated)"];
        if (!("Latitude (generated)" in dict)){
            lat = dict["çº¬åº¦(èªå¨çæ)"]
            lng = dict["ç»åº¦(èªå¨çæ)"]
        }

        var code = dict["Lad 2020 Code"];
        
        rest_cat_index = ["AGG(Number of Italian Restaurants in LAD)",
        "AGG(Number of Indian Restaurants in LAD)", "AGG(Number of Japanese Restaurants in LAD)",
        "AGG(Number of Thai Restaurants in LAD)", "AGG(Number of British Restaurants in LAD)",
        "AGG(Number of Chinese Restaurants in LAD)", "AGG(Number of Vegetarian Restaurants in LAD)",
        "AGG(Number of Pub(s) in LAD)", "AGG(Number of Cafe(s) in LAD)"]

        var curr_rest_num = dict[rest_cat_index[rest_cat_value]];
        var sum_rest_num = dict["AGG(Number of Restaurants in LAD)"];

        console.log("Current restaurant num:" + curr_rest_num);

        res_count = new Array();
        var dataview_value = $('#dataview').val();
        // only Google API when one mark is selected
        if (marks.length == 1 && dataview_value == "none"){
            
            console.log("Restaurant Category Selected:" + rest_cat_value)
            // Use AJAX to call method from controller
            $.ajax({
                type: "GET",
                url: "/get_restaurant_count",
                data: {'name': name},
                success:function(msg){
                    // Returning a json format of count
                    res_count = msg.response;
                    console.log("Response: " + res_count)
                    openNav(name,code, lat,lng,population,res_count,rest_cat_value, sum_rest_num, curr_rest_num,area_size);
                },
                error: function() {
                    alert('Unavailable to retreive restaurant amount in this area');
                }
            });
            
            // openNav(res_count, name,lat,lng,population);
            console.log("LAD Name:" + name + ", LAD Code: " + code +  ", Lat:" + lat + ",lng: " + lng + ", population: " + population);
            
        }
    }

%body#stylediv

-# Side panel for google maps
#mySidebar.sidebar
