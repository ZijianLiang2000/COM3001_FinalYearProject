-# Enable gon to work, so that ENV variables can be passed to js
= include_gon
%head
%title Basic Embed
%body{:onload => "init()"}
    -# include script to add google embed iframe
    %script{:src => "https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"}

    %div#lad_option{ :style => "position: absolute; margin: auto;padding: 10px; top: 130px;left: 40px;" }
        .tips#tips
        %br
        .card#card_select{:style => "width: 40rem;"}
            .card-body
                -# Options to choose which map to display
                %h4 Map View:
                %select#globalstyleselect{:onchange => "styleselect()", :class => "form-select w-100%" }
                    %option{:disabled => "disabled", :hidden => "", :selected => "selected", :value => "none"} Select an Option
                    %option{:value => "1"} Heatmap
                    %option{:value => "2"} Density map
                %br
                %h4 Data View:
                %select#dataview{:onchange => "dataview()", :class => "form-select w-100%"}
                    %option{:selected => "selected", :value => "none"} Map
                    %option{:value => "1"} Ethnic Structure (Chart)
                    %option{:value => "2"} Population Median Age (Chart)
                    %option{:value => "3"} Region Similarity (Clusters)
                    %option{:value => "4"} Region Restaurant Density Similarity (Clusters)
                    %option{:value => "5"} Region Rent and Similarity (Clusters)
                %br
                %h4 Restaurant Category:
                %select#rest_cat_select{:onchange => "update_weight_to_tableau()", :class => "form-select w-100%"}
                    %option{:disabled => "disabled", :hidden => "", :selected => "selected", :value => "none"} Select an Restaurant Category
                    %option{:value => "0"} Italian Restaurant
                    %option{:value => "1"} Indian Restaurant
                    %option{:value => "2"} Japanese Restaurant
                    %option{:value => "3"} Thai Restaurant
                    %option{:value => "4"} British Restaurant
                    %option{:value => "5"} Chinese Restaurant
                    %option{:value => "6"} Vegetarian
                    %option{:value => "7"} Cafe
                    %option{:value => "8"} Pub
                %br
                -# Button to Previous step
                = back_link

    %div#lad_notification{ :style => "position: absolute; margin: auto;padding: 10px; top: 130px; right: 10%; width: 250px;" }
        .notification#notification
        %br
        .card#card_select{:style => "width: 100%;"}
            .card-body#notification_content
                

%script{:src => "https://public.tableau.com/javascripts/api/tableau-2.min.js", :type => "text/javascript"}

-# Window to pop-up and function to open the sidebar
:javascript

    function init(){
        var rest_cat_val = $('#rest_cat_select').val();
        document.getElementById('rest_cat_select').selectedIndex = gon.rest_cat;
        console.log("Selected Restaurant Category: " + (gon.rest_cat));
        
        document.getElementById("tips").innerHTML=
        `<div class="card" style="width: 40rem;">
        <div class="card-body"><h5>Tips</h5><a class="closebtn" href="javascript:void(0)" onclick="closeTips()">&times;</a><p style='font-family: Segoe UI;'><small>Explore information related to each local authority area through hovering and tapping on it. 
        The heatmap displays recommendation value in colour scale. Select different views and change restaurant categories to update recommendation value.
        <br><ul>
        <li>To move the map view: Hold "Shift" + "Left Button" and drag mouse</li>
        <li>To zoom in and out: Scroll through the scroll wheel of mouse</li>
        <li>To view presentation of area data: Hover mouse on an area</li>
        <li>To view detailed information of area, explore nearby locations or select current LAD location: Click on an area</li>
        </ul></small></p></div>
        </div>`;

        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "none";

        var lad_notification = document.getElementById("lad_notification");
        lad_notification.style.display = "none";
        
        // Select default option to be 1, so do not need to press every time
        console.log("Running Init function");
        document.getElementById('globalstyleselect').selectedIndex = "1";
        document.getElementById("globalstyleselect").dispatchEvent(new Event("change"));
    }

    function closeTips(){
        document.getElementById("tips").style.display = "none";
        document.getElementById("card_select").style="width: 18rem;"
    }

    function openNav(name, code, lat,lng,population,count, rest_cat_val, sum_rest_num, curr_rest_num,area_size, featured_norm_val) {

        // Load weight_arr after updated to pass to lsoa
        var weight_arr = window["weight_arr"]

        // Current type restaurant number in area
        console.log("Number of selected type restaurant in lad:" + curr_rest_num);
        console.log("Number of all restaurant in lad:" + sum_rest_num);
        console.log("LAD Code: " + code);
        
        total = 0
        for(var k in count) {
            console.log("Each:" + count[k]);
            total += parseInt(count[k])
        }

        console.log("RestCatVal:" + rest_cat_val)
        console.log("RestCatVal (int):" + parseInt(rest_cat_val))
        console.log("Area size:" + parseInt(area_size))
        console.log("Number of selected category restaurants in and nearby LAD:" + count[parseInt(rest_cat_val)])
        console.log("Listed restaurants within area: " + parseInt(total))

        restaurant_Category_Encode = ["Italian Restaurant","Indian Restaurant","Japanese Restaurant","Thai Restaurant","British Restaurant","Chinese Restaurant","Vegetarian","Cafe","Pub"]

        // Google maps API iFrame source - latitude and longitude of clicked LSOA area on map
        src = ' src="https://www.google.com/maps/embed/v1/view?key='+gon.google_api_key+'&center=' + lat + ',' + lng + '&zoom=15">'
        // Let LSOA default map to show be identical to previous map if next stage
        var map_style = $('#globalstyleselect').val();
        console.log(src);
        console.log("Token: " + gon.form_token);
        console.log("Map style: " + map_style);
        
        innerHtml = '<head><style>' +
        // Header part
        ".holder .card{position: absolute;top: 10px;left: 10px;width: 100%;}" +
        '.holder #select_area{position: absolute;bottom: 60px; left: 30%;}'+
        '</style></head>' +
        '<body>' + 
        // Close Button
        '<a class="closebtn" href="javascript:void(0)" onclick="closeNav()">&times;</a>' +
        // Google map frame
        '<div class="holder"><iframe id="map_frame"' +
        ' width="450"' +
        ' height="800"' +
        ' style="border:0"' +
        ' loading="lazy"' +
        ' allowfullscreen' +
        src +
        '</iframe>' +
        // Button to select a location, post params of location to controller
        '<form class="button_to" method="post" action="/lsoa_heatmap?name='+name+'&lad='+ code +'&map_style='+ map_style + '&rest_cat='+ parseInt(rest_cat_val) +'&weight_arr='+weight_arr+'">'+
        '<input class="btn btn-success" id="select_area" type="submit" value="Select ' + name + '" />' +
        '<input type="hidden" name="authenticity_token" value="' + gon.form_token + '" />' +
        '</form>' +
        // Card to display information about district
        '<div class="card" style="width: 18rem;">' +
        '<div class="card-body">' +
        '<h5 class="card-title">'+ name +'</h5><h6>Features: </h6>';

        //
        for(let i = 0; i<featured_norm_val.length;i++){
            innerHtml += '<span class="badge bg-success">'+ featured_norm_val[i][1] +'</span>&nbsp;';
        }

        innerHtml += '<h6 class="card-subtitle mb-2 text-muted"><br>Area size: '+ parseInt(area_size) * 10 +' kmÂ²</h6>' +
        '<h6 class="card-subtitle mb-2 text-muted">Population: '+ population +'</h6>' +
        '<h6 class="card-subtitle mb-2 text-muted"> '+ (total - 0) +' listed restaurants within and nearby </h6>' +
        '<h6 class="card-subtitle mb-2 text-muted"> '+ sum_rest_num +' listed restaurants in ' + name + ' </h6>' +
        '<h6 class="card-subtitle mb-2 text-muted" id="dir_compt"> '+ curr_rest_num +' Direct Competitors (' + restaurant_Category_Encode[parseInt(rest_cat_val)] + ') </h6>' +
        '<h6 class="card-subtitle mb-2 text-muted" id="indir_compt"> '+ (total - curr_rest_num) +' Indirect Competitors </h6>' +
        
        // button for nearby search
        '<br><form class="button_to" method="post" action="/nearby_result?name='+name+'&lat='+lat+'&lng='+lng+'&map=LAD">' +
        '<input class="btn btn-primary" id="nearby_search" type="submit" value="Feature Locations nearby" />' +
        '<input type="hidden" name="authenticity_token" value="' + gon.form_token + '" />' +       
        '</form>' + 
        '</div></div></div></body>'


        document.getElementById("mySidebar").innerHTML=innerHtml;
        document.getElementById("mySidebar").style.width = "450px";
        
    }

    function closeNav() {
        // close sidebar by setting width to 0
        document.getElementById("mySidebar").style.width = "0";
    }

    function closeNotification(){
        // hide card
        document.getElementById("lad_notification").style.display = "none";
    }

    let viz
    //function for viz
    function initViz(containerDiv, url, options) {
        if (viz){
            viz.dispose();
        }
        viz = new tableau.Viz(containerDiv, url, options);
    }

    window.addEventListener("resize", () => {
        console.log(
            `Resizing the window ${window.innerHeight}, ${window.innerWidth}`
        );
        autoResize();
    });


    function encapsulateViewViz(url, filter_name, filter_val){
        console.log(url);
        console.log(filter_name);
        console.log(filter_val);
        var containerDiv = document.getElementById("vizContainer"),
            url = url,
            options = {
                // Options to show/filter Restaurant category according to selected type from user
                filter_name: filter_val,
                width: window.innerWidth,
                height: window.innerHeight,
                device: "desktop",
                hideTabs: true,
                onFirstInteractive: function () {
                    workbook = viz.getWorkbook();
                    console.log("Run this code when the viz has finished loading.");
                    listenToMarksSelection();
                    
                }
            }
    initViz(containerDiv, url, options);
    }
    // Option to show sheet 1 Heat map
    function applyOptions1() {
        rest_cat = ["Italian Restaurant","Indian Restaurant","Japanese Restaurant","Thai Restaurant","British Restaurant","Chinese Restaurant","Vegetarian","Cafe","Pub"];
        // Selected restaurant category options from user, eg: 3, we want to get rest_cat[3] = Thai Restaurant
        var rest_cat_value = $('#rest_cat_select').val();
        var heatMap_url = "https://public.tableau.com/views/LAD_Recommendation_Value/LADWorksheetHeatmap?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link";
        encapsulateViewViz(heatMap_url,"Restaurant Category", rest_cat[rest_cat_value])
    }

    // Option to show sheet 2 for Density
        function applyOptions2() {
        rest_cat = ["Italian Restaurant","Indian Restaurant","Japanese Restaurant","Thai Restaurant","British Restaurant","Chinese Restaurant","Vegetarian","Cafe","Pub"];
        // Selected restaurant category options from user, eg: 3, we want to get rest_cat[3] = Thai Restaurant
        var rest_cat_value = $('#rest_cat_select').val();
        var densityMap_url = "https://public.tableau.com/views/LAD_Recommendation_Value/LADWorksheetDensityMap?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link";
        encapsulateViewViz(densityMap_url,"Restaurant Category", rest_cat[rest_cat_value]);
    }

    function encapsulateDataViz(url){
        var containerDiv = document.getElementById("vizContainer"),
        url = url,
        options = {
            // Options to show/filter Restaurant category according to selected type from user
            width: window.innerWidth,
            height: window.innerHeight,
            device: "desktop",
            hideTabs: true,
            onFirstInteractive: function () {
                workbook = viz.getWorkbook();
                console.log("Run this code when the viz has finished loading.");
                listenToMarksSelection();
            }
    };

    initViz(containerDiv, url, options);
    }

    // Option to show ethnic structure
    function applyDataView1() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADEthnicStructure?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link");
    }
    

    function applyDataView2() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADPopulation?:language=zh-CN&publish=yes&:display_count=n&:origin=viz_share_link");
    }

    function applyDataView3() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADCluster?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link");
    }
    

    function applyDataView4() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADRestaurantCategoryDensity?:language=en-GB&publish=yes&:display_count=n&:origin=viz_share_link");
    }

    function applyDataView5() {
        encapsulateDataViz("https://public.tableau.com/views/LAD_Recommendation_Value/LADClusterRentandHousing?:language=en-GB&:display_count=n&:origin=viz_share_link");
    }

    // Resize dashboard window
    function autoResize(){
        const height = window.innerHeight;
        const width = window.innerWidth;
        viz.setFrameSize(width, height);
    }

    function styleselect() {
        // hide block option every time onchange option
        document.getElementById("lad_option").style.position = "absolute";
        document.getElementById("lad_option").style.top = "130px";
        document.getElementById("lad_option").style.left = "40px";

        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "none";

        var value = $('#globalstyleselect').val();
        // once map view is changed, set data view back to map
        var dataview_value = $('#dataview').val();
        document.getElementById('dataview').selectedIndex = "none";
        //var div = $("#stylediv");
        // If map style is Heatmap map
        if (value == "1") {
            // Use data sheet for Heatmap map
            applyOptions1();
        }
        // else you datasheet for Density map
        if (value == "2") {
            applyOptions2();
        }
    }

    function dataview() {
        // hide block option every time onchange option
        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "none";

        var value = $('#dataview').val();
        var map_value = $('#globalstyleselect').val()
        // if dataview is selected as Map
        if (value == "none") {
            document.getElementById("lad_option").style.position = "absolute";
            document.getElementById("lad_option").style.top = "130px";
            document.getElementById("lad_option").style.left = "40px";
            // while map view is selected as heatmap or not selected
            if (map_value == "1" || map_value == "none"){
                    
                // apply first option
                applyOptions1();
                
            }
            // or else apply the second
            else {
                applyOptions2();
            }
        }
        //var div = $("#stylediv");
        // If map style is Ethnic Structure table
        if (value == "1") {
            document.getElementById("lad_option").style.position = "relative";
            document.getElementById("lad_option").style.top = "0px";
            document.getElementById("lad_option").style.left = "0px";
            // Use data sheet for Ethnic Structure table
            applyDataView1();
        }
        // else you datasheet for XXX
        if (value == "2") {
            document.getElementById("lad_option").style.position = "relative";
            document.getElementById("lad_option").style.top = "0px";
            document.getElementById("lad_option").style.left = "0px";
            applyDataView2();
        }
        if (value == "3") {
            document.getElementById("lad_option").style.position = "absolute";
            document.getElementById("lad_option").style.top = "130px";
            document.getElementById("lad_option").style.left = "40px";
            applyDataView3();
        }
        if (value == "4") {
            document.getElementById("lad_option").style.position = "absolute";
            document.getElementById("lad_option").style.top = "130px";
            document.getElementById("lad_option").style.left = "40px";
            applyDataView4();
        }
        if (value == "5") {
            document.getElementById("lad_option").style.position = "absolute";
            document.getElementById("lad_option").style.top = "130px";
            document.getElementById("lad_option").style.left = "40px";
            applyDataView5();
        }
    }

    function ethnic_weight_update(origin_ethnicity, rest_cat_val){

        var Asian_weight = 4;
        var Black_weight = 4;
        var White_weight = 4;
        var Mixed_weight = 4;
        var Others_weight = 4;

        if(origin_ethnicity[rest_cat_val] == "Asian"){
            Asian_weight += 2;
            Black_weight -= 0.5;
            White_weight -= 0.5;
            Mixed_weight -= 0.5;
            Others_weight -= 0.5;
        } else if(origin_ethnicity[rest_cat_val] =="White"){
            Asian_weight -= 0.5;
            Black_weight -= 0.5;
            White_weight += 2;
            Mixed_weight -= 0.5;
            Others_weight -= 0.5;
        } else if(origin_ethnicity[rest_cat_val] =="All"){
            Asian_weight -= 0.25;
            Black_weight -= 0.25;
            White_weight += 1;
            Mixed_weight -= 0.25;
            Others_weight -= 0.25;
        }
        var ethnic_weight_arr = [Asian_weight, Black_weight, White_weight, Mixed_weight, Others_weight];
        return ethnic_weight_arr;
    }

    // Encapsulated function to calculate weights according to restaurant category, price segment and acceptance value
    function encapsulated_weight_calc(rest_cat_val, price_seg_val, food_acceptance_score, rent_accept_min, rent_accept_max){

        // Default weight values set in Tableau that are related to change of restaurant category
        var Asian_weight = 4;
        var Black_weight = 4;
        var White_weight = 4;
        var Mixed_weight = 4;
        var Others_weight = 4;
        var Same_cat_restaurant_weight = 10;
        var Diff_cat_restaurant_weight = 10;
        var Rent_acceptance_min = rent_accept_min;
        var Rent_acceptance_max = rent_accept_max;

        // Array for another method to deal with ethnic weights and pass back to this function
        var ethnic_weight_arr = [];

        // Notification to users to notify overall acceptance, aggregation or diffusion, how its market is...
        var notification = "";

        console.log("Restaurant category passed in: " + rest_cat_val);

        // Restaurant category array from 0 to 8, total 9 restaurant indices
        // [ITA, IND, JAP, THA, GB, CN, VEG, CAFE, PUB]
        var rest_cat_arr = [...Array(9).keys()];
        // Matching restaurant category - restaurant and COO value scoring, from 1 - 5 points (User provides food related acceptance, reference other two acceptance)
        var other_acceptance_score = [1.1366, 1.2659, 1.1745, 1.0, 5.0, 2.0, 4.0, 5.0, 5.0];

        // Matching majority ethnicity of restaurant to group, direct influencial ethnic group weights depends on this array
        // If a certain single ethnicity, then +2, others -0.5 
        // If all, then according to ethnicity structure of UK, all +1.5, others +1.
        var origin_ethnicity = ["White", "Asian", "Asian", "Asian", "All", "Asian", "All", "All", "All"];
        // Price segment of each restaurant category
        // [Rest_cat_0: [Low-price%, Medium-price%, Expensive%, Very-expensive%]]
        var rest_cat_price_seg = [[0.23, 0.69, 0.07, 0.01], [0.23, 0.77, 0, 0], [0.24, 0.69, 0.05, 0.02], [0.17, 0.65, 0.14, 0.04],[0.14, 0.72, 0.1, 0.03],
            [0.62, 0.37, 0.01, 0], [0.20, 0.67, 0.03, 0.01],[0.80, 0.10, 0.03, 0.01],[0.70, 0.22, 0.06, 0.02]];

        // 3 user options: rest_cat_val, price_seg_val, acceptance_select_val

        // calculate the comprehensive overall acceptance score from user expected food acceptance and other objective stats
        var overall_acceptance = (1 + food_acceptance_score) * (1/3) + other_acceptance_score[rest_cat_val]

        // for every restaurant category
        for(let i = 0; i < rest_cat_arr.length; i++) {
            // if rest_cat matches selected one
            if(i == rest_cat_val){
            console.log("the " + i + "th iteration");
            // Price segment
            // Quick serve restaurant (QSR) is low to medium price, where weight gradually increase when approaching low lvl price from middle - 16Â£
            // Fine dining is expensive to very expensive price level, where weight gradually increase when approaching higher lvl - over 32Â£
            // Hence from 16Â£ to left and right side tends to be extreme in same absolute value of weight, += same value for opposite strategy.

                // print price segment percentage of corresponding restaurant
                //console.log("Majoriy origin ethnicity: " + origin_ethnicity[i] + ", Restaurant category price segment: " + rest_cat_price_seg[i] + ", Restaurant category restaurant and COO score: " + other_acceptance_score[i]);
                // if corresponding restaurant category's user proposed price range has different number
                // if expected acceptance is high and high price, then risk relatively lower than lower acceptance is higher price ones
                //console.log("Percentage of restaurant category in selected price segment: " + rest_cat_price_seg[i][price_seg_val]);
                switch(true){

                    // if corresponding restaurant category's price range is less than 0.02, then user's proposed price range is highly unrecommended.
                    // weight will drastically decrease

                    case (rest_cat_price_seg[i][price_seg_val] < 0.02):
                    console.log("Very small market for selected price range for current restaurant category");
                    notification += "This restaurant category barely has any market for the selected price segment, ";
                    // if expected price range for current restaurant category has too little existing market
                    // its overall weight would be decrease and recommendation value would decrease
                    // because of high price range for a low
                        if(overall_acceptance > 3){
                            console.log("High overall acceptance");
                            notification += "The overall acceptance (food, restaurant and country of origin) is high, ";
                            // if user find expected acceptance high
                            // relatively higher recommendation weight compared to same level worst option
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            
                            // If price segment low,business category market small, overall acceptance high
                            if(price_seg_val == 0){
                            console.log("Price segment low");
                            notification += "current price segment chosen is the low-price segment. However, if a restaurant category overall is expected to be mid to high price segment, expanding to a lower end market may provide larger potential with the corrent business strategy. ";
                            // ------
                            // if price segment is low, market is small, acceptance is high, restaurant tend to diffuse
                            // usually restaurants with current category would not have too small market in low price segment
                            // hence recommendation value would not decrease but increase due to differentiation in marketing strategy
                            // to sell more in lower price where market is not developed
                            // hence higher weight for diff_cat restaurant and lower weight for same_cat restaurant
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5
                            // If price segment medium,business category market small, overall acceptance high
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // ------
                            // if price segment is middle, market is small, acceptance is high, restaurant tend to diffuse
                            
                            // hence higher weight for same_cat restaurant and lower weight for diff_cat restaurant
                            // Diffuse
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5

                            // If price segment high,business category market small, overall acceptance high
                            }else if(price_seg_val == 2){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment extremely,business category market small, overall acceptance high
                            }else{
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment.";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance > 1.5 && overall_acceptance <= 3){
                            notification += "The overall acceptance (food, restaurant and country of origin) is medium, ";
                            console.log("Medium overall acceptance");
                            // middle
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance middle
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            
                            // Then between agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment medium, business category market small, overall acceptance middle
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Then agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment high, business category market small, overall acceptance middle
                            }else if(price_seg_val == 2){
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance middle
                            }else{
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance <= 1.5){
                            notification += "The overall acceptance (food, restaurant and country of origin) is low, ";
                            console.log("Low overall acceptance");
                            // do not recommend
                            // notify price range too high, existing market too small and acceptance low
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance low
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment medium, business category market small, overall acceptance low
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment high, business category market small, overall acceptance low
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended. If a restaurant is in high price segment and has a small market with low acceptance, it faces significant risk. ";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance low
                            }else{
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.  If a restaurant is in a very high price segment and has a small market with low acceptance, it faces significant risk. ";
                            console.log("Price segment very high")
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        }
                        console.log("Not suggested due to very few to no restaurant of current category in this price range");
                        break;

                    // weight will remain
                    // if market in segment is small
                    case (rest_cat_price_seg[i][price_seg_val] > 0.02 && rest_cat_price_seg[i][price_seg_val] < 0.2):
                        notification += "This restaurant category has some market for the selected price segment, ";
                        console.log("Relatively small market for selected price range for current restaurant category");
                        
                        if(overall_acceptance > 3){
                            console.log("High overall acceptance");
                            notification += "The overall acceptance (food, restaurant and country of origin) is high, ";
                        
                            // if user find expected acceptance high
                            // relatively higher recommendation weight compared to same level worst option
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            

                        
                            // If price segment low,business category market small, overall acceptance high
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // ------
                            // if price segment is low, market is small, acceptance is high, restaurant tend to diffuse
                            // usually restaurants with current category would not have too small market in low price segment
                            // hence recommendation value would not decrease but increase due to differentiation in marketing strategy
                            // to sell more in lower price where market is not developed
                            // hence higher weight for diff_cat restaurant and lower weight for same_cat restaurant
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5
                            // If price segment medium,business category market small, overall acceptance high
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // ------
                            // if price segment is middle, market is small, acceptance is high, restaurant tend to diffuse
                            
                            // hence higher weight for same_cat restaurant and lower weight for diff_cat restaurant
                            // Diffuse
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5

                            // If price segment high,business category market small, overall acceptance high
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment extremely,business category market small, overall acceptance high
                            }else{
                                
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance > 1.5 && overall_acceptance <= 3){
                            notification += "The overall acceptance (food, restaurant and country of origin) is medium, ";
                            console.log("Medium overall acceptance");
                            // middle
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance middle
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            
                            // Then between agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment medium, business category market small, overall acceptance middle
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Then agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment high, business category market small, overall acceptance middle
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance middle
                            }else{
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            console.log("Price segment very high")
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance <= 1.5){
                            notification += "The overall acceptance (food, restaurant and country of origin) is low, ";
                            notification += "current price segment chosen is low-price. ";
                            console.log("Low overall acceptance");
                            // do not recommend
                            // notify price range too high, existing market too small and acceptance low
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance low
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment medium, business category market small, overall acceptance low
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment high, business category market small, overall acceptance low
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance low
                            }else{
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            console.log("Price segment very high")
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        }
                        console.log("Not suggested due to very few to no restaurant of current category in this price range");
                        break;

                    // if current restaurant category market is current middle
                    case (rest_cat_price_seg[i][price_seg_val] > 0.2 && rest_cat_price_seg[i][price_seg_val] < 0.4):
                    notification += "This restaurant category has a medium market size for the selected price segment, ";
                        console.log("Medium size market for selected price range for current restaurant category");
                        if(overall_acceptance > 3){
                            console.log("High overall acceptance");
                            notification += "The overall acceptance (food, restaurant and country of origin) is high, ";
                        
                            // if user find expected acceptance high
                            // relatively higher recommendation weight compared to same level worst option
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            
                            // If price segment low,business category market small, overall acceptance high
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // ------
                            // if price segment is low, market is small, acceptance is high, restaurant tend to diffuse
                            // usually restaurants with current category would not have too small market in low price segment
                            // hence recommendation value would not decrease but increase due to differentiation in marketing strategy
                            // to sell more in lower price where market is not developed
                            // hence higher weight for diff_cat restaurant and lower weight for same_cat restaurant
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5
                            // If price segment medium,business category market small, overall acceptance high
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // ------
                            // if price segment is middle, market is small, acceptance is high, restaurant tend to diffuse
                            
                            // hence higher weight for same_cat restaurant and lower weight for diff_cat restaurant
                            // Diffuse
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5

                            // If price segment high,business category market small, overall acceptance high
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";

                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment extremely,business category market small, overall acceptance high
                            }else{
                                
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance > 1.5 && overall_acceptance <= 3){
                            notification += "The overall acceptance (food, restaurant and country of origin) is medium, ";
                            console.log("Medium overall acceptance");
                            // middle
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance middle
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            
                            // Then between agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment medium, business category market small, overall acceptance middle
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Then agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment high, business category market small, overall acceptance middle
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                        
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance middle
                            }else{
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance <= 1.5){
                            notification += "The overall acceptance (food, restaurant and country of origin) is low, ";
                            console.log("Low overall acceptance");
                            // do not recommend
                            // notify price range too high, existing market too small and acceptance low
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance low
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment medium, business category market small, overall acceptance low
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment high, business category market small, overall acceptance low
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance low
                            }else{
                            console.log("Price segment very high");
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        }
                        console.log("Not suggested due to very few to no restaurant of current category in this price range");
                        break;

                    // if current market for restaurant category is mainstream
                    case (rest_cat_price_seg[i][price_seg_val] > 0.4 && rest_cat_price_seg[i][price_seg_val] < 0.6):
                        notification += "The selected price segment is the mainstream positioning for similar businessies is the restaurant category, ";
                        console.log("Mainstream market for selected price range for current restaurant category");
                        if(overall_acceptance > 3){
                            console.log("High overall acceptance");
                            notification += "The overall acceptance (food, restaurant and country of origin) is high, ";
                        
                            // if user find expected acceptance high
                            // relatively higher recommendation weight compared to same level worst option
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)

                            
                            // If price segment low,business category market small, overall acceptance high
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // ------
                            // if price segment is low, market is small, acceptance is high, restaurant tend to diffuse
                            // usually restaurants with current category would not have too small market in low price segment
                            // hence recommendation value would not decrease but increase due to differentiation in marketing strategy
                            // to sell more in lower price where market is not developed
                            // hence higher weight for diff_cat restaurant and lower weight for same_cat restaurant
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5
                            // If price segment medium,business category market small, overall acceptance high
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // ------
                            // if price segment is middle, market is small, acceptance is high, restaurant tend to diffuse
                            
                            // hence higher weight for same_cat restaurant and lower weight for diff_cat restaurant
                            // Diffuse
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5

                            // If price segment high,business category market small, overall acceptance high
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";

                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment extremely,business category market small, overall acceptance high
                            }else{
                            console.log("Price segment very high");
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance > 1.5 && overall_acceptance <= 3){
                            notification += "The overall acceptance (food, restaurant and country of origin) is medium, ";
                            console.log("Medium overall acceptance");
                            // middle
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance middle
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            
                            // Then between agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment medium, business category market small, overall acceptance middle
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Then agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment high, business category market small, overall acceptance middle
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                        
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance middle
                            }else{
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            console.log("Price segment very high")
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance <= 1.5){
                            notification += "The overall acceptance (food, restaurant and country of origin) is low, ";
                            console.log("Low overall acceptance");
                            // do not recommend
                            // notify price range too high, existing market too small and acceptance low
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance low
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment medium, business category market small, overall acceptance low
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment high, business category market small, overall acceptance low
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance low
                            }else{
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            console.log("Price segment very high")
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        }
                        console.log("Not suggested due to very few to no restaurant of current category in this price range");
                        break;

                    // most restaurants choose this price range in this market for selected 
                    case (rest_cat_price_seg[i][price_seg_val] > 0.6 && rest_cat_price_seg[i][price_seg_val] < 0.8):
                        notification += "The selected price segment is saturated for similar businessies is the restaurant category (better try different price segments for larger marketing potential), ";
                        console.log("Saturated market for selected price range for current restaurant category");
                        if(overall_acceptance > 3){
                            console.log("High overall acceptance");
                            notification += "The overall acceptance (food, restaurant and country of origin) is high, ";
                        
                            // if user find expected acceptance high
                            // relatively higher recommendation weight compared to same level worst option
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            
                            // If price segment low,business category market small, overall acceptance high
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // ------
                            // if price segment is low, market is small, acceptance is high, restaurant tend to diffuse
                            // usually restaurants with current category would not have too small market in low price segment
                            // hence recommendation value would not decrease but increase due to differentiation in marketing strategy
                            // to sell more in lower price where market is not developed
                            // hence higher weight for diff_cat restaurant and lower weight for same_cat restaurant
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5
                            // If price segment medium,business category market small, overall acceptance high
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // ------
                            // if price segment is middle, market is small, acceptance is high, restaurant tend to diffuse
                            
                            // hence higher weight for same_cat restaurant and lower weight for diff_cat restaurant
                            // Diffuse
                            console.log("Diffuse");
                            notification += "Restaurant tend to diffuse with restaurants of similar restaurant category or positioning, hence area with large amount of those businesses would not be recommended.";
                            Same_cat_restaurant_weight -= 5
                            Diff_cat_restaurant_weight += 5

                            // If price segment high,business category market small, overall acceptance high
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";

                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment extremely,business category market small, overall acceptance high
                            }else{
                                
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance > 1.5 && overall_acceptance <= 3){
                            notification += "The overall acceptance (food, restaurant and country of origin) is medium, ";
                            console.log("Medium overall acceptance");
                            // middle
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance middle
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            
                            // Then between agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment medium, business category market small, overall acceptance middle
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Then agglomeration and diffusion
                            Same_cat_restaurant_weight += 0
                            Diff_cat_restaurant_weight -= 0
                            // If price segment high, business category market small, overall acceptance middle
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance middle
                            }else{
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            console.log("Price segment very high")
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        } else if(overall_acceptance <= 1.5){
                            notification += "The overall acceptance (food, restaurant and country of origin) is low, ";
                            console.log("Low overall acceptance");
                            // do not recommend
                            // notify price range too high, existing market too small and acceptance low
                            ethnic_weight_arr = ethnic_weight_update(origin_ethnicity, rest_cat_val)
                            // If price segment low, business category market small, overall acceptance low
                            if(price_seg_val == 0){
                            notification += "current price segment chosen is low-price. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment medium, business category market small, overall acceptance low
                            }else if(price_seg_val == 1){
                            console.log("Price segment medium");
                            notification += "current price segment chosen is the medium-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment high, business category market small, overall acceptance low
                            }else if(price_seg_val == 2){
                            console.log("Price segment high");
                            notification += "current price segment chosen is the high-price segment. ";
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            // If price segment very high, business category market small, overall acceptance low
                            }else{
                            // Agglomerate
                            console.log("Agglomerate");
                            notification += "current price segment chosen is the very-high price segment. ";
                            notification += "Restaurant tend to agglomerate with restaurants of similar restaurant category or positioning to take advantage of attracting consumers, hence area with large amount of similar businesses would be recommended.";
                            console.log("Price segment very high")
                            Same_cat_restaurant_weight += 5
                            Diff_cat_restaurant_weight -= 5
                            }
                        }
                        break;
                } 
            } 
            
        }
    
    

        // Adjust weight against rent which is independent from other user options, the larger the weight is,
        // the more a restaurant is not recommended

        Asian_weight = ethnic_weight_arr[0];
        Black_weight = ethnic_weight_arr[1];
        White_weight = ethnic_weight_arr[2];
        Mixed_weight = ethnic_weight_arr[3];
        Others_weight = ethnic_weight_arr[4];
        

        var weight_arr = [Asian_weight, Black_weight, White_weight, Mixed_weight, Others_weight, Same_cat_restaurant_weight,
            Diff_cat_restaurant_weight, Rent_acceptance_min, Rent_acceptance_max, notification];

        var name_arr = `Asian_weight, Black_weight, White_weight, Mixed_weight, Others_weight, Same_cat_restaurant_weight,
            Diff_cat_restaurant_weight, Rent_acceptance_min, Rent_acceptance_max, notification`;

        for(let i = 0; i<weight_arr.length; i++){
            console.log((name_arr.split(','))[i]);
            console.log(weight_arr[i]);
        }

        console.log("Notification:");
        console.log(notification);

        return weight_arr;

    }

    // JS scipt to update value when an option is selected for restuarant category
    // because some weights for importance change for different restaurants
    function update_weight_to_tableau(){
        // hide block option every time onchange option
        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "none";

        var lad_notification = document.getElementById("lad_notification");
        lad_notification.style.display = "none";

        var rest_cat_value = $('#rest_cat_select').val();
        var map_type = $('#globalstyleselect').val();

        // Price seg can be 
        var price_seg = gon.price_seg;
        var acceptance_select =  gon.acceptance_select;
        var rent_min = gon.rent_min;
        var rent_max = gon.rent_max;

        //default settings
        var Population_density_weight = 20;
        var Asian_weight = 4;
        var Black_weight = 4;
        var White_weight = 4;
        var Mixed_weight = 4;
        var Others_weight = 4;
        var Same_cat_restaurant_weight = 10;
        var Diff_cat_restaurant_weight = 10;
        var Employment_weight = 15;
        var House_price_weight = 14;
        var Income_weight = 13;

        // Rent weight adjusted in Tableau
        // if Area rent within bound of Rent acceptance min - Rent acceptance max, weight * 1.5
        // if Area rent > Rent acceptance max, weight * 10
        var Rent_weight = 18;
        var Restaurant_industry_weight = 12;

        var Ethnic_Sort_by = "Default";

        console.log("Selected restaurant category: '" + rest_cat_value + "'")
        console.log("Selected acceptance: '" + acceptance_select + "'")

        var weight_arr = []
        // When restaurant category for each option is
        switch (rest_cat_value) {
        // Italian Restaurant
        case "0":
            weight_arr = encapsulated_weight_calc("0", price_seg, acceptance_select, rent_min, rent_max);
            break;
        // Indian Restaurant
        case "1":            
            weight_arr = encapsulated_weight_calc("1", price_seg, acceptance_select, rent_min, rent_max);
            break;
        // Japanese Restaurant
        case "2":
            weight_arr = encapsulated_weight_calc("2", price_seg, acceptance_select, rent_min, rent_max);
            break;
        // Thai Restaurant
        case "3":
            weight_arr = encapsulated_weight_calc("3", price_seg, acceptance_select, rent_min, rent_max);
            break;
        // British Restaurant
        case "4":
            weight_arr = encapsulated_weight_calc("4", price_seg, acceptance_select, rent_min, rent_max);
            break;
        // Chinese Restaurant
        case "5":
            weight_arr = encapsulated_weight_calc("5", price_seg, acceptance_select, rent_min, rent_max);
            break;
        // If restaurant is Vegetarian
        case "6":
            weight_arr = encapsulated_weight_calc("6", price_seg, acceptance_select, rent_min, rent_max);
            break;
        // If restaurant is Cafe
        case "7":
            weight_arr = encapsulated_weight_calc("7", price_seg, acceptance_select, rent_min, rent_max);
            break;
        // If restaurant is Cafe
        case "8":
            weight_arr = encapsulated_weight_calc("8", price_seg, acceptance_select, rent_min, rent_max);
            break;
        default:
            console.log("Default case");
        }

        // weight updates for statistics on population of cities
        if (rest_cat_value == 1 || rest_cat_value == 2 || rest_cat_value == 3 || rest_cat_value == 5){
            Ethnic_Sort_by = "Asian Percentage";
        } else if(rest_cat_value == 4 || rest_cat_value == 6 || rest_cat_value == 7) {
            Ethnic_Sort_by = "White Percentage";
        }
        else {
            Ethnic_Sort_by = "White Percentage";
        }
        // Assign returned values back to parameter and update in Tableau
        Asian_weight = weight_arr[0];
        Black_weight = weight_arr[1];
        White_weight = weight_arr[2];
        Mixed_weight = weight_arr[3];
        Others_weight = weight_arr[4];
        Same_cat_restaurant_weight = weight_arr[5];
        Diff_cat_restaurant_weight = weight_arr[6];
        Rent_acceptance_min = weight_arr[7];
        Rent_acceptance_max = weight_arr[8];
        Notification = weight_arr[9];
        
        
        console.log("Sort by:" + Ethnic_Sort_by);
        console.log("Updated parameters for weights");
        console.log(Asian_weight);
        console.log(Black_weight);
        console.log(White_weight);
        console.log(Mixed_weight);
        console.log(Others_weight);
        console.log(Same_cat_restaurant_weight);
        console.log(Diff_cat_restaurant_weight);
        console.log(Rent_acceptance_min);
        console.log(Rent_acceptance_max);

        // Pass weight_arr and other parameters to LSOA worksheet so we do not have to work on the logic again
        
        window["weight_arr"] = weight_arr.slice(0,9);

        // change all weights to if-condition weights defined
        workbook.changeParameterValueAsync("Sort by", Ethnic_Sort_by);
        workbook.changeParameterValueAsync("Asian_weight", Asian_weight);
        workbook.changeParameterValueAsync("Black_weight", Black_weight);
        workbook.changeParameterValueAsync("White_weight", White_weight);
        workbook.changeParameterValueAsync("Mixed_weight", Others_weight);
        workbook.changeParameterValueAsync("Other_Race_weight", Others_weight);
        workbook.changeParameterValueAsync("Same_Cat_Restaurant_weight", Same_cat_restaurant_weight);
        workbook.changeParameterValueAsync("Diff_Cat_Restaurant_weight", Diff_cat_restaurant_weight);
        workbook.changeParameterValueAsync("Rent_acceptance_min", Rent_acceptance_min);
        workbook.changeParameterValueAsync("Rent_acceptance_min", Rent_acceptance_min);
        console.log("Finished Adjusting weights");

        // display lad option when loaded
        lad_option.style.display = "block";
        // display lad notification when loaded
        lad_notification.style.display = "block";

        // fill card of lad notification with content
        document.getElementById("notification_content").innerHTML=
        `<h5><b>About your selections</b><a class="closebtn" href="javascript:void(0)" onclick="closeNotification()">&times;</a></h5>
        <p>`+ Notification +`</p>`;
    }

    function listenToMarksSelection() {
        console.log("listenToMarksSelection function is loaded");
        //Check every time when map is loaded, the value of restaurant category and update weights
        //--------------------------------
        update_weight_to_tableau();

        // Display option block everytime map is loaded
        var lad_option = document.getElementById("lad_option");
        lad_option.style.display = "block";
        

        viz.addEventListener(tableau.TableauEventName.MARKS_SELECTION, onMarksSelection);
    }

    function onMarksSelection(marksEvent) {
        console.log("onMarksSelection function is loaded");
        return marksEvent.getMarksAsync().then(reportSelectedMarks);
    }

    function reportSelectedMarks(marks) {
        console.log("reportSelectedMarks is loaded");
        var html = "";

        // Obtain mark data when selected
        for (var markIndex = 0; markIndex < marks.length; markIndex++) {
            var pairs = marks[markIndex].getPairs();
            html += "Mark " + markIndex + ": ";
            var array = [];
            var dict = {}
            for (var pairIndex = 0; pairIndex < pairs.length; pairIndex++) {
                var pair = pairs[pairIndex];
                html += "Field Name: " + pair.fieldName;
                html += ", Value:" + pair.formattedValue + "\n ";
                dict[pair.fieldName] = pair.formattedValue;
                array.push(pair.formattedValue);
            }
            console.log(html);
            html += "";
            //for (var index = 0; index < array.length; index++) {
            //    console.log(array[index] + " ");
            //}
            for(var key in dict) {
                console.log(key + " : " + dict[key]);
            }
        }

        // Print selected restaurant category value
        var rest_cat_value = $('#rest_cat_select').val();

        // Assign mark parameters to values
        var name =  dict["Lad 2020 Name"];
        var area_size = dict["ATTR(Areachect)"];
        var population = dict["ATTR(Population (All ages))"];
        var lat = dict["Latitude (generated)"];
        var lng = dict["Longitude (generated)"];
        if (!("Latitude (generated)" in dict)){
            lat = dict["çº¬åº¦(èªå¨çæ)"]
            lng = dict["ç»åº¦(èªå¨çæ)"]
        }

        var code = dict["ATTR(Lad 2020 Code)"];
        
        // Restaurant category indices
        var rest_cat_index = ["AGG(Number of Italian Restaurants in LAD)",
        "AGG(Number of Indian Restaurants in LAD)", "AGG(Number of Japanese Restaurants in LAD)",
        "AGG(Number of Thai Restaurants in LAD)", "AGG(Number of British Restaurants in LAD)",
        "AGG(Number of Chinese Restaurants in LAD)", "AGG(Number of Vegetarian Restaurants in LAD)",
        "AGG(Number of Pub(s) in LAD)", "AGG(Number of Cafe(s) in LAD)"]

        var curr_rest_num = dict[rest_cat_index[rest_cat_value]];
        var sum_rest_num = dict["AGG(Number of Restaurants in LAD)"];

        console.log("Current restaurant num:" + curr_rest_num);

        // Restaurant normalized value to discover the advantage or disadvantage of an area.
        // normalized value can show a measure's performance / score compared to all other areas
        // Each var will have the val and name of the parameter
        var pop_dense_norm = [dict["AGG(Population_Density_normalized)"], "Population Density"];
        var income_norm = [dict["AGG(Household_Income_normalized)"], "Household Income"];
        var house_price_norm = [dict["AGG(House_Price_normalized)"], "House Price"];
        var weekly_rent_norm = [dict["ATTR(Normalized 2021)"], "Weekly Rent"];
        var Asian_percentage_normalized = [dict["AGG(Asian_%_normalized)"], "Asian Percentage"];
        var Black_percentage_normalized = [dict["AGG(Black_%_normalized)"], "Black Percentage"];
        var White_percentage_normalized = [dict["AGG(White_%_normalized)"], "White Percentage"];
        var Mixed_percentage_normalized = [dict["AGG(Mixed_%_normalized)"], "Mixed Percentage"];
        var Other_percentage_normalized = [dict["AGG(Other_%_normalized)"], "Other Ethnicity Percentage"];
        var employment_normalized = [dict["AGG(Employment_normalized)"], "Overall Employment"];
        var same_cat_normalized = [dict["AGG(Same_cat_normalized)"], "Amount of same category restaurants"];
        var diff_cat_normalized = [dict["AGG(Diff_cat_normalized)"], "Amount of different category restaurants"];

        // loopable array for normalization
        var normalized_arr = [pop_dense_norm, income_norm, house_price_norm, weekly_rent_norm, Asian_percentage_normalized, Black_percentage_normalized,
        White_percentage_normalized, Mixed_percentage_normalized, Other_percentage_normalized, employment_normalized, same_cat_normalized, diff_cat_normalized];

        // add these normalized value if they have featureable values
        var featured_norm_val = [];

        for(let i = 0; i<normalized_arr.length;i++){
            // values other than house price and rent price, the higher the better
            if(normalized_arr[i][0]>0.8 && normalized_arr[i][1] != "House Price" && normalized_arr[i][1] != "Weekly Rent"){
                featured_norm_val.push(normalized_arr[i]);
                console.log("Values larger than 0.8 among all areas");
                console.log(normalized_arr[i][1]);
            
            }

            // house price and rent price, the lower the better
            if(normalized_arr[i][1] == "House Price" || normalized_arr[i][1] == "Weekly Rent" && normalized_arr[i][0] <= 0.2){
                featured_norm_val.push(normalized_arr[i]);
                console.log("House price or rent values less than 0.2 among all areas");
                console.log(normalized_arr[i][1]);
            }
        }

        res_count = new Array();
        var dataview_value = $('#dataview').val();
        // only Google API when one mark is selected
        if (marks.length == 1){
            
            console.log("Restaurant Category Selected:" + rest_cat_value)
            // Use AJAX to call method from controller
            $.ajax({
                type: "GET",
                url: "/get_restaurant_count",
                data: {'name': name},
                success:function(msg){
                    // Returning a json format of count
                    res_count = msg.response;
                    console.log("Response: " + res_count)
                    openNav(name,code, lat,lng,population,res_count,rest_cat_value, sum_rest_num, curr_rest_num,area_size, featured_norm_val);
                },
                error: function() {
                    alert('Unavailable to retreive restaurant amount in this area');
                }
            });
            
            // openNav(res_count, name,lat,lng,population);
            console.log("LAD Name:" + name + ", LAD Code: " + code +  ", Lat:" + lat + ",lng: " + lng + ", population: " + population);
        }
    }

%body#stylediv

-# Side panel for google maps
#mySidebar.sidebar
